import{_ as r,o as d,c as l,a as e,b as n,w as s,d as i,e as o,r as t}from"./app.7f1fd85c.js";const c={},u=e("h1",{id:"come-installare-misskey-su-ubuntu",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#come-installare-misskey-su-ubuntu","aria-hidden":"true"},"#"),i(" Come installare Misskey su Ubuntu")],-1),p=e("h2",{id:"altri-tipi-di-installazione",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#altri-tipi-di-installazione","aria-hidden":"true"},"#"),i(" Altri tipi di installazione")],-1),v=i("Installazione manuale"),m=i("Tutti i tipi di installazione"),g=e("h2",{id:"script-per-il-terminale-bash",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#script-per-il-terminale-bash","aria-hidden":"true"},"#"),i(" Script per il terminale bash")],-1),h=e("div",{class:"custom-container tip"},[e("i",{class:"fas fa-info"}),e("p",null,"Questa installazione non \xE8 destinata alla installazione di ambienti di sviluppo.")],-1),b=e("p",null,"Smetti di fare copia incolla, \xE8 fastidioso, noioso, richiede tempo!",-1),f=i("Vuoi svolgere una installazione automatica? C'\xE8 lo "),x=i("script per il terminale bash"),y=i(" che fa quasi tutto!"),z=o(`<p>Ti serve soltanto: un dominio, la configurazione di Cloudflare e la protezione del server.</p><h2 id="a-proposito" tabindex="-1"><a class="header-anchor" href="#a-proposito" aria-hidden="true">#</a> A proposito</h2><p>Il tipo di <a href="./manual">Installazione manuale</a> prevede l&#39;esecuzione di Misskey tramite <code>systemd</code></p><p>Il tipo di installazione tramite <a href="./docker">docker-compose</a> \xE8 la pi\xF9 facile e ti permette di eseguire Misskey in un ambiente virtuale, senza modificare il sistema che la ospita.</p><h2 id="introduzione" tabindex="-1"><a class="header-anchor" href="#introduzione" aria-hidden="true">#</a> Introduzione</h2><p>Questa pagina indica come <a href="./manual">Installare Misskey</a> su sistema operativo GNU/Linux Ubuntu.</p><p>Occorre soltanto eseguire alcuni comandi <em>bash</em>, modificare alcuni file di configurazione e usare il browser.</p><p>Le indicazioni sono specifiche per il sistema operativo Ubuntu, alcune parti potrebbero cambiare in futuro, rendendo inutile la guida. Ce ne scusiamo.</p><h2 id="ambiente-e-requisiti" tabindex="-1"><a class="header-anchor" href="#ambiente-e-requisiti" aria-hidden="true">#</a> Ambiente e requisiti</h2><ul><li>Sistema operativo <strong>Ubuntu 22.04.1 LTS</strong>.</li><li>Requisiti hardware, occorre una CPU moderna, di architettura amd64 o arm64.</li><li>Memoria RAM necessaria, circa 1.5GB.</li><li>Dominio web gi\xE0 configurato e account Cloudflare attivo.</li></ul><div class="custom-container tip"><i class="fas fa-info"></i><p>Se prepari un ambiente di sviluppo, dominio e Cloudflare non servono</p></div><div class="custom-container danger"><i class="fas fa-times"></i><p>Do not recreate the database with the domain/hostname of the server once you have started using it!</p></div><h2 id="come-usare-l-editor-nano" tabindex="-1"><a class="header-anchor" href="#come-usare-l-editor-nano" aria-hidden="true">#</a> Come usare l&#39;editor Nano</h2><p>L&#39;editor di testo si apre con questo comando. <code>nano /percorso/al/file</code>. Il cursore si muove coi tasti freccia, home, end ecc... Per uscire, premi <code>CTRL+x</code>, successivamente, decidi se salvare le modifiche, premi <code>Y</code> per accettare.</p><h2 id="creare-un-utente" tabindex="-1"><a class="header-anchor" href="#creare-un-utente" aria-hidden="true">#</a> Creare un utente</h2><p>Crea un utente di sistema, poich\xE9 Misskey non dovrebbe girare con privilegi di super utente <em>root</em>.</p><p><code>sudo adduser --disabled-password --disabled-login misskey</code></p><div class="custom-container tip"><i class="fas fa-info"></i><p>Se prepari un ambiente di sviluppo, non importa crearlo.</p></div><h2 id="installazione-software-iniziale" tabindex="-1"><a class="header-anchor" href="#installazione-software-iniziale" aria-hidden="true">#</a> Installazione software iniziale</h2><p>Occorre del software per svolgere le prossime attivit\xE0, per favore installalo se non \xE8 gi\xE0 presente.</p><h3 id="node-js" tabindex="-1"><a class="header-anchor" href="#node-js" aria-hidden="true">#</a> Node.js</h3><p>Si tratta di un linguaggio di programmazione lato server, basato su JavaScript. Necessario per eseguire Misskey.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo apt install -y curl

curl -sL https://deb.nodesource.com/setup_20.x | sudo -E bash -

sudo apt install -y nodejs

node -v

sudo corepack enable
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ti occorre la versione <code>v20.x.y</code>. Se appare un&#39;altra versione, come la <code>v8.x.y</code> allora l&#39;installazione non \xE8 andata a buon fine. Potresti usare il <a href="https://github.com/nvm-sh/nvm#about" target="_blank" rel="noopener noreferrer">progetto Node Version Manager</a>.</p><h3 id="postgresql" tabindex="-1"><a class="header-anchor" href="#postgresql" aria-hidden="true">#</a> PostgreSQL</h3><p>Questo \xE8 il Data Base Management System. Il gestore della base dati relazionale, ad oggetti. Essenziale per il funzionamento di Misskey.</p><h4 id="installazione-dbms" tabindex="-1"><a class="header-anchor" href="#installazione-dbms" aria-hidden="true">#</a> Installazione DBMS</h4><p>Occorre avere l&#39;ultima versione, <code>v.15</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo apt install -y postgresql-common

sudo sh /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh -i -v 15;

systemctl status postgresql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Se tutto \xE8 andato bene, leggerai: <strong>OK</strong></p><h4 id="configurazione-dbms" tabindex="-1"><a class="header-anchor" href="#configurazione-dbms" aria-hidden="true">#</a> Configurazione DBMS</h4><p>Esegui il client che si connette al DBMS. <code>sudo -u postgres psql</code></p><p>Ora devi creare una utenza per Misskey. Se scegli username <strong>misskey</strong> e password <strong>gattino</strong>, dovrai digitare la query:</p><p><code>CREATE ROLE misskey LOGIN CREATEDB PASSWORD &#39;gattino&#39;;</code></p><p>Poi occorre il database: <code>CREATE DATABASE mkdb OWNER misskey;</code></p><p>Per uscire da <code>psql</code> scrivi <code>\\q</code></p><h3 id="redis" tabindex="-1"><a class="header-anchor" href="#redis" aria-hidden="true">#</a> Redis</h3><p>Si tratta di un database non relazionale (noSQL), gestito nella memoria. Necessario per gestire la connessione tra le federazioni e il database.</p><p>Installa Redis seguendo la <a href="https://redis.io/docs/getting-started/installation/install-redis-on-linux/" target="_blank" rel="noopener noreferrer">documentazione ufficiale</a>.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo apt install -y curl ca-certificates gnupg2 lsb-release

curl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg

echo &quot;deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main&quot; | sudo tee /etc/apt/sources.list.d/redis.list

sudo apt update

sudo apt install -y redis

systemctl status redis-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Se tutto \xE8 andato bene, leggerai : <strong>Ok</strong></p><h3 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> Nginx</h3><p>Si tratta di un Application Web Server. Anche se non \xE8 essenziale, svolge comunque un compito importante, come il caching e la crittografia SSL (https).</p><div class="custom-container tip"><i class="fas fa-info"></i><p>Se configuri un ambiente di sviluppo, non serve.</p></div><p>Installa Nginx seguendo la [documentazione ufficiale](http://nginx.org/en/linux_packages.html#Ubuntu].</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo apt install ubuntu-keyring

curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor | sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg &gt;/dev/null

gpg --dry-run --quiet --no-keyring --import --import-options import-show /usr/share/keyrings/nginx-archive-keyring.gpg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Controlla se ottieni <code>573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62</code> come risposta.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>echo &quot;deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] http://nginx.org/packages/ubuntu \`lsb_release -cs\` nginx&quot; | sudo tee /etc/apt/sources.list.d/nginx.list

echo -e &quot;Package: *\\nPin: origin nginx.org\\nPin: release o=nginx\\nPin-Priority: 900\\n&quot; | sudo tee /etc/apt/preferences.d/99nginx

sudo apt update

sudo apt install -y nginx

systemctl status nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Se tutto \xE8 andato bene, leggerai : <strong>Ok</strong></p><p>Attiva il servizio e abilita la partenza automatica al riavvio.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo systemctl start nginx

sudo systemctl enable nginx

curl http://localhost
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Se leggi <strong>Welcome to ngnix!</strong> allora tutto \xE8 andato bene.</p><h3 id="altri-software" tabindex="-1"><a class="header-anchor" href="#altri-software" aria-hidden="true">#</a> Altri software</h3><p>Occorrono due pacchetti aggiuntivi. Servono per la creazione di Misskey.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo apt update

sudo apt install -y git build-essential
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="altre-configurazioni" tabindex="-1"><a class="header-anchor" href="#altre-configurazioni" aria-hidden="true">#</a> Altre configurazioni</h2><p>Preparati ad esporre il servizio su internet</p><div class="custom-container tip"><i class="fas fa-info"></i><p>se stai preparando un ambiente di sviluppo, queste configurazioni non sono necessarie.</p></div><h3 id="firewall" tabindex="-1"><a class="header-anchor" href="#firewall" aria-hidden="true">#</a> Firewall</h3><p>Useremo &#39;ufw&#39; come firewall per bloccare le connessioni non autorizzate.</p><p>Si configura una whitelist e si aprono le porte dei servizi SSH 22, HTTP 80, HTTPS 443.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo ufw enable

sudo ufw default deny

sudo ufw limit 22

sudo ufw allow 80

sudo ufw allow 443
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Controlla la configurazione con: <code>sudo ufw status</code> Attiva la partenza automatica al riavvio: <code>sudo systemctl enable ufw</code></p><div class="custom-container tip"><i class="fas fa-info"></i><p>ufw semplifica l&#39;uso di Netfilter (IPTABLES)</p></div><h3 id="cloudflare" tabindex="-1"><a class="header-anchor" href="#cloudflare" aria-hidden="true">#</a> CloudFlare</h3><p>Si tratta di un servizio utile per gestire DNS, Reverse Proxy e CDN sul tuo dominio. Si pu\xF2 anche evitare ma \xE8 consigliato, oltre che comodo. <a href="../admin/cdn">Configurazione CDN</a></p><p><a href="https://dash.cloudflare.com/sign-up" target="_blank" rel="noopener noreferrer">Iscrizione a CloudFlare</a> segui le indicazioni per configurare il dominio prescelto.</p><p>Digita l&#39;indirizzo IP del server nella schermata DNS. A seconda del servizio, potrebbero essere necessarie fino a 48 ore prima della ricezione delle configurazioni.</p><h3 id="configurazione-certbot-let-s-encrypt" tabindex="-1"><a class="header-anchor" href="#configurazione-certbot-let-s-encrypt" aria-hidden="true">#</a> Configurazione Certbot (Let\u2019s Encrypt)</h3><p>Per attivare la protezione SSL su <strong>https</strong>, ti occorre un certificato.</p><p>Installa il plugin che integra Certbot e Cloudflare: <code>sudo apt install -y certbot python3-certbot-dns-cloudflare</code></p><p>Ottieni una APIKey dal sito Cloudflare</p><ol><li><a href="https://dash.cloudflare.com/profile/api-tokens" target="_blank" rel="noopener noreferrer">Apri la pagina</a></li><li>Seleziona: visualizza API Key Globale</li><li>Inserisci la password e indica che sei una persona umana</li></ol><p>Crea un file di configurazione con le informazioni di Cloudflare.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>mkdir /etc/cloudflare
nano /etc/cloudflare/cloudflare.ini
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Scrivi questi parametri dentro al file di configurazione:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>dns_cloudflare_email = tuo.accountn@registrato.su.cloudflare
dns_cloudflare_api_key = xxxxxxxxxxxxxxxxxxxxxxxxxx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Salva il file e imposta i privilegi di lettura: <code>sudo chmod 600 /etc/cloudflare/cloudflare.ini</code></p><p>Esegui il seguente comando, modificando <code>example.tld</code> con il tuo dominio: <code>sudo certbot certonly --dns-cloudflare --dns-cloudflare-credentials /etc/cloudflare/cloudflare.ini --dns-cloudflare-propagation-seconds 60 --server https://acme-v02.api.letsencrypt.org/directory -d example.tld -d *.example.tld</code></p><p>Se leggi <strong>Congratulations!</strong> \xE8 andato tutto bene. Annota il percorso dei file <code>.pem</code>, ti serviranno dopo.</p><h2 id="installazione-misskey" tabindex="-1"><a class="header-anchor" href="#installazione-misskey" aria-hidden="true">#</a> Installazione Misskey</h2><p>Ora che i preparativi sono finiti, puoi installare Misskey.</p><p>Diventa l&#39;utente <code>misskey</code> preparato in precedenza: <code>sudo su - misskey</code></p><p>Ottieni il codice sorgente tramite git:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>git clone -b master https://github.com/misskey-dev/misskey.git\`

cd misskey

git checkout master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Installa le librerie necessarie:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>NODE_ENV=production pnpm install --frozen-lockfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="configurazione-di-misskey" tabindex="-1"><a class="header-anchor" href="#configurazione-di-misskey" aria-hidden="true">#</a> Configurazione di Misskey</h2><h3 id="il-file-default-yml" tabindex="-1"><a class="header-anchor" href="#il-file-default-yml" aria-hidden="true">#</a> Il file default.yml</h3><p>Crea il file e scrivici i contenuti indicati di seguito: <code>nano .config/default.yml</code>.</p><p>I parametri col pallino \u25CF vanno modificati. I parametri col cerchietto \u3007 sono i valori che hai configurato fino ad ora.</p><p>Puoi vedere un <a href="https://github.com/misskey-dev/misskey/blob/develop/.config/example.yml" target="_blank" rel="noopener noreferrer">esempio di configurazione</a></p><div class="custom-container tip"><i class="fas fa-info"></i><p>Se stai configurando un ambiente di sviluppo, indica <code>url: http://localhost:3000</code></p></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># \u25CF URL pubblico di Misskey
url: https://example.tld/

# Imposta la porta numero 3000
port: 3000

# \u25CF Configurazione PostgreSQL\u3002
db:
	host: localhost
	port: 5432
	db  : mkdb # \u3007 Nome del database PostgreSQL
	user: misskey # \u3007 Nome utente PostgreSQL
	pass: gattini # \u25CF Password di PostgreSQL

# Configurazione Redis
redis:
	host: localhost
	port: 6379

# Configurazione del tipo di ID
id: &#39;aid&#39;

# \u3000 syslog
syslog:
	host: localhost
	port: 514
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ricordati di salvare le modifiche.</p><h3 id="configurazione-di-nginx" tabindex="-1"><a class="header-anchor" href="#configurazione-di-nginx" aria-hidden="true">#</a> Configurazione di Nginx</h3><p>Configurare usando i privilegi di super utente <em>root</em>. Smetti di essere l&#39;utente misskey: <code>exit</code></p><p>Crea la configurazione: <code>sudo nano /etc/nginx/conf.d/misskey.conf</code></p><p>Copia la <a href="../admin/nginx">configurazione di Nginx</a> e incollala dentro a Nano.</p><p>Svolgi le seguenti modifiche indicando le tue configurazioni:</p><ul><li>Righe 18 e 30 URL del dominio</li><li>Righe 34-35 Sostituisci il percorso al file Certificato di Certbot (.pem)</li><li>Se usi la CDN o un altro Reverse Proxy, elimina 4 righe a partire dalla 56</li></ul><p>Ricordati di salvare le modifiche.</p><p>Controlla il funzionamento: <code>sudo nginx -t</code></p><p>Se ottieni <strong>OK</strong> riavvia il servizio: <code>sudo systemctl restart nginx</code> poi verifica il funzionamento: <code>sudo systemctl status nginx</code></p><p>Se ottieni <strong>OK</strong> va tutto bene.</p><h2 id="costruire-misskey" tabindex="-1"><a class="header-anchor" href="#costruire-misskey" aria-hidden="true">#</a> Costruire Misskey</h2><p>Adesso torna ad essere utente misskey: <code>sudo su - misskey</code></p><p>Avvia la build:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd misskey
NODE_ENV=production npm run build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><i class="fas fa-info"></i><p>Se stai preparando un ambiente di sviluppo, <code>NODE_ENV=production</code> non serve.</p></div><h3 id="se-non-riesci-a-costruire-la-build-sul-server" tabindex="-1"><a class="header-anchor" href="#se-non-riesci-a-costruire-la-build-sul-server" aria-hidden="true">#</a> Se non riesci a costruire la build sul server</h3><p>Potresti avere a disposizione meno di 2GB di memoria RAM. Servono per costruire Misskey e svolgere gli aggiornamenti.</p><p>Possibili soluzioni:</p><ul><li>Aggiungi memoria swap al server</li><li>Trasferisci i file del repository git sul tuo pc e avvia la build da l\xEC.</li></ul><h2 id="inizializza-il-database" tabindex="-1"><a class="header-anchor" href="#inizializza-il-database" aria-hidden="true">#</a> Inizializza il Database</h2><p><code>npm run init</code></p><h2 id="avvia-misskey" tabindex="-1"><a class="header-anchor" href="#avvia-misskey" aria-hidden="true">#</a> Avvia Misskey</h2><p><code>NODE_ENV=production pnpm run start</code></p><p>Quando leggi: <strong>Now listening on port 3000 on</strong>, accedi alla URL indicata.</p><p>Dovresti vedere la pagina iniziale di Misskey. Inizia a verificare se funziona.</p><h3 id="se-non-riesci-ad-accedere" tabindex="-1"><a class="header-anchor" href="#se-non-riesci-ad-accedere" aria-hidden="true">#</a> Se non riesci ad accedere</h3><h4 id="controlla-il-dns-di-cloudflare" tabindex="-1"><a class="header-anchor" href="#controlla-il-dns-di-cloudflare" aria-hidden="true">#</a> Controlla il DNS di CloudFlare</h4><p>Visita il sito Cloudflare e verifica che la configurazione DNS punti verso l&#39;indirizzo IP che hai indicato.</p><h4 id="controlla-il-router" tabindex="-1"><a class="header-anchor" href="#controlla-il-router" aria-hidden="true">#</a> Controlla il router</h4><p>Se hai installato Misskey in un server che st\xE0 dietro una sottorete, verifica che le porte 80 e 443 siano raggiungibili dall&#39;esterno.</p><h2 id="creazione-servizio-misskey" tabindex="-1"><a class="header-anchor" href="#creazione-servizio-misskey" aria-hidden="true">#</a> Creazione servizio Misskey</h2><div class="custom-container tip"><i class="fas fa-info"></i><p>Se stai preparando un ambiente di sviluppo, non \xE8 necessario</p></div><p>Termina Misskey premendo <code>CTRL+c</code>. poi torna ad essere utente super amministratore: <code>exit</code></p><p>Crea la configurazione del servizio: <code>sudo nano /etc/systemd/system/misskey.service</code></p><p>Incolla il seguente testo e salva:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[Unit]
Description=Misskey daemon

[Service]
Type=simple
User=misskey
ExecStart=/usr/bin/npm start
WorkingDirectory=/home/misskey/misskey
Environment=&quot;NODE_ENV=production&quot;
TimeoutSec=60
StandardOutput=journal
StandardError=journal
SyslogIdentifier=misskey
Restart=always

[Install]
WantedBy=multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Abilita la configurazione e riavvia il servizio:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo systemctl daemon-reload

sudo systemctl enable misskey

sudo systemctl start misskey
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Aspetta circa 15 secondi e verifica il funzionamento: <code>sudo systemctl status misskey</code>, se ottieni <strong>Ok</strong> va tutto bene.</p><p>Per finire registra il primo utente, amministratore e accedi per completare la configurazione.</p><h2 id="aggiornare-misskey" tabindex="-1"><a class="header-anchor" href="#aggiornare-misskey" aria-hidden="true">#</a> Aggiornare Misskey</h2><p>C&#39;\xE8 uno <a href="https://github.com/joinmisskey/bash-install/blob/main/update.ubuntu.sh" target="_blank" rel="noopener noreferrer">script automatico per aggiornare</a></p><p><a href="./manual#">Aggiornamento manuale</a></p><p>Misskey deve essere spento per svolgere queste azioni:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo systemctl stop misskey

su - misskey

git pull;

NODE_ENV=production pnpm install --frozen-lockfile

pnpm run clean;

NODE_ENV=production pnpm run build;

pnpm run migrate;

exit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="opzione-1-aggiorna-anche-il-sistema" tabindex="-1"><a class="header-anchor" href="#opzione-1-aggiorna-anche-il-sistema" aria-hidden="true">#</a> Opzione 1: aggiorna anche il sistema</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo apt update -y
sudo apt full-upgrade -y
sudo reboot
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In questo caso Misskey torner\xE0 disponibile dopo il riavvio.</p><h3 id="opzione-2-avvia-subito-misskey" tabindex="-1"><a class="header-anchor" href="#opzione-2-avvia-subito-misskey" aria-hidden="true">#</a> Opzione 2: avvia subito Misskey</h3><p><code>sudo systemctl start misskey</code></p>`,145);function k(S,_){const a=t("RouterLink");return d(),l("div",null,[u,p,e("ul",null,[e("li",null,[n(a,{to:"/it/docs/install/manual.html"},{default:s(()=>[v]),_:1})]),e("li",null,[n(a,{to:"/it/docs/install.html"},{default:s(()=>[m]),_:1})])]),g,h,b,e("p",null,[f,n(a,{to:"/it/docs/install/bash.html"},{default:s(()=>[x]),_:1}),y]),z])}var N=r(c,[["render",k],["__file","ubuntu-manual.html.vue"]]);export{N as default};
