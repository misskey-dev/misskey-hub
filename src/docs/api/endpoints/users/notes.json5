{
	summary: 'ユーザーが作成したノートを取得します。',
	description: 'ユーザーが作成したノートを取得します。',
	tags: [
		'users',
	],
	requireCredential: false,
	req: {
		type: 'object',
		properties: {
			userId: {
				type: 'string',
				format: 'misskey:id',
				description: 'ユーザーのid。',
			},
			includeReplies: {
				type: 'boolean',
				default: true,
				description: 'trueにすると、ノートへの返信も含めて返します。',
			},
			limit: {
				type: 'integer',
				minimum: 1,
				maximum: 100,
				default: 10,
				description: '取得するノートの最大数。',
			},
			sinceId: {
				type: 'string',
				format: 'misskey:id',
				description: '指定すると、idがその値よりも大きいノートを返します。',
			},
			untilId: {
				type: 'string',
				format: 'misskey:id',
				description: '指定すると、idがその値よりも小さいノートを返します。',
			},
			sinceDate: {
				type: 'integer',
				description: 'エポック秒で日時を指定すると、その日時より後に作成されたノートを返します。',
			},
			untilDate: {
				type: 'integer',
				description: 'エポック秒で日時を指定すると、その日時より前に作成されたノートを返します。',
			},
			includeMyRenotes: {
				type: 'boolean',
				default: true,
				description: 'trueにすると、ログイン中のユーザーが行ったRenoteを含めます。',
			},
			withFiles: {
				type: 'boolean',
				default: false,
				description: 'trueにすると、ファイルが添付されたノートだけを返します。',
			},
			fileType: {
				type: 'array',
				items: {
					type: 'string',
				},
				description: '指定された種類のファイルが添付された投稿のみを取得します。',
			},
			excludeNsfw: {
				type: 'boolean',
				default: false,
				description: 'trueにすると、CWが付与されたノートと、NSFW指定されたファイルが添付されたノートを除外します。fileTypeが指定されている場合のみ有効です（添付ファイルのないCW付きのノートは除外されません）。',
			},
		},
		required: [
			'userId',
		],
	},
	res: {
		type: 'array',
		optional: false,
		nullable: false,
		items: {
			type: 'object',
			optional: false,
			nullable: false,
			ref: 'Note',
			$ref: 'misskey://Note',
		},
	},
	errors: {
		'27e494ba-2ac2-48e8-893b-10d4d8c2387b': {
			id: '27e494ba-2ac2-48e8-893b-10d4d8c2387b',
			code: 'NO_SUCH_USER',
			description: 'ユーザーが存在しません。',
		},
	},
}
